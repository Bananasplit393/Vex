name: Trivy Scan with VEX

on:
  push:
    branches: "**"

permissions:
  contents: read # Required to checkout the code
  security-events: write # Required to upload SARIF results to GitHub Security tab
  actions: read # Required for the action to run properly

jobs:
  trivy_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          docker build -t localbuild/trivyapptest:latest .

      - name: Create VEX directory (local files)
        run: |
          mkdir -p .vex
          # Ensure vex.json exists at the root of your repo, or adjust this path.
          # This copies vex.json into a .vex/ directory at the repo root.
          cp vex.json .vex/

      - name: Run Trivy vulnerability scan with VEX
        uses: aquasecurity/trivy-action@0.21.0
        with:
          scan-type: "image"
          image-ref: "localbuild/trivyapptest:latest"
          trivy-config: ".github/trivy/trivy.yaml"
          format: "sarif"
          output: "trivy-results.sarif"
          exit-code: "0" # Exit code 0 to prevent failure on vulnerabilities
          severity: "CRITICAL,HIGH,MEDIUM,LOW" # Filter by severity before VEX
          ignore-unfixed: false # Ignore unfixed vulnerabilities

      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
          # category: "trivy-vex-scan"

      - name: Upload Raw Trivy JSON Results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-raw-json-results
          path: trivy-raw-results.json
          if-no-files-found: error # Ensure it errors if the file isn't created
