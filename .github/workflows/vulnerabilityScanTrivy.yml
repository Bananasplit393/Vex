name: Trivy Scan with VEX

on:
  push:
    branches: "**"

permissions:
  contents: read # Required to checkout the code
  security-events: write # Required to upload SARIF results to GitHub Security tab

jobs:
  trivy_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create VEX directory (if using local files)
        run: |
          # Copy your VEX files into the .vex directory or create them dynamically here
          # For this example, assuming vex.json is at the root of your repo
          cp vex.json .vex/

      - name: Run Trivy vulnerability scan with VEX
        uses: aquasecurity/trivy-action@master
        with:
          # 'fs' for filesystem, 'image' for container image
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH" # Filter by severity before VEX
          args: "--vex .vex/ --show-suppressed"
          # --show-suppressed is for debugging to see what was filtered.

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
          # If you set a category for CodeQL, you might want to use it here too
          # category: "trivy-vex-scan"
